{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lauty\\\\OneDrive\\\\Documentos\\\\GitHub\\\\tpo_react\\\\frontend\\\\src\\\\views\\\\MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport DetailsMovieDetail from '../components/MovieDetail/DetailsMovieDetail';\nimport moviesData from '../components/Movies/movies.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetailPage() {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const movie = moviesData.find(movie => movie.id === parseInt(movieId));\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pelicula no encontrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DetailsMovieDetail, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetailPage, \"e2L2DPdRH1AShA7yIOCsYRlzvlI=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetailPage;\nexport default MovieDetailPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailPage\");","map":{"version":3,"names":["React","useParams","DetailsMovieDetail","moviesData","jsxDEV","_jsxDEV","MovieDetailPage","_s","movieId","movie","find","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lauty/OneDrive/Documentos/GitHub/tpo_react/frontend/src/views/MovieDetail.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DetailsMovieDetail from '../components/MovieDetail/DetailsMovieDetail'; \r\nimport moviesData from '../components/Movies/movies.json'; \r\n\r\nfunction MovieDetailPage() {\r\n  const { movieId } = useParams();\r\n  const movie = moviesData.find(movie => movie.id === parseInt(movieId)); \r\n\r\n  if (!movie) {\r\n    return <div>Pelicula no encontrada</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DetailsMovieDetail movie={movie} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,UAAU,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAMQ,KAAK,GAAGN,UAAU,CAACO,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,EAAE,KAAKC,QAAQ,CAACJ,OAAO,CAAC,CAAC;EAEtE,IAAI,CAACC,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAQ,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,oBACEZ,OAAA;IAAAQ,QAAA,eACER,OAAA,CAACH,kBAAkB;MAACO,KAAK,EAAEA;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACV,EAAA,CAbQD,eAAe;EAAA,QACFL,SAAS;AAAA;AAAAiB,EAAA,GADtBZ,eAAe;AAexB,eAAeA,eAAe;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}