{"ast":null,"code":"import axios from 'axios';\nconst TMDB_API_KEY = 'da558536b1d1ca3fbfb73ba736f43331';\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\nexport const searchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${TMDB_BASE_URL}/search/multi`, {\n      params: {\n        api_key: TMDB_API_KEY,\n        query: query,\n        page: page\n      }\n    });\n    let combinedResults = response.data.results;\n    if (response.data.results[0].media_type == \"person\") {\n      combinedResults = [...response.data.results[0].known_for, ...response.data.results.slice(1)];\n    }\n    return combinedResults;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${TMDB_BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: TMDB_API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    throw error;\n  }\n};\nexport const getMovies = async () => {\n  try {\n    const response = await axios.get(`${TMDB_BASE_URL}/discover/movie`, {\n      params: {\n        api_key: TMDB_API_KEY\n      }\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","TMDB_API_KEY","TMDB_BASE_URL","searchMovies","query","page","response","get","params","api_key","combinedResults","data","results","media_type","known_for","slice","error","console","getMovieDetails","movieId","getMovies"],"sources":["C:/Users/lauty/OneDrive/Documentos/GitHub/tpo_react/frontend/src/services/tmdb.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst TMDB_API_KEY = 'da558536b1d1ca3fbfb73ba736f43331';\r\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const searchMovies = async (query, page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${TMDB_BASE_URL}/search/multi`, {\r\n      params: {\r\n        api_key: TMDB_API_KEY,\r\n        query: query,\r\n        page: page,\r\n      },\r\n    });\r\n    let combinedResults = response.data.results;\r\n      if (response.data.results[0].media_type == \"person\") {\r\n          combinedResults = [...response.data.results[0].known_for, ...response.data.results.slice(1)];\r\n  }\r\n    return combinedResults;\r\n  } catch (error) {\r\n    console.error('Error searching movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  try {\r\n    const response = await axios.get(`${TMDB_BASE_URL}/movie/${movieId}`, {\r\n      params: {\r\n        api_key: TMDB_API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error getting movie details:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMovies = async () => {\r\n  try {\r\n    const response = await axios.get(`${TMDB_BASE_URL}/discover/movie`, {\r\n      params: {\r\n        api_key: TMDB_API_KEY,\r\n      },\r\n    });\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error('Error fetching movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,kCAAkC;AACvD,MAAMC,aAAa,GAAG,8BAA8B;AAEpD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,GAAG,CAAC,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEL,aAAc,eAAc,EAAE;MAChEM,MAAM,EAAE;QACNC,OAAO,EAAER,YAAY;QACrBG,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACR;IACF,CAAC,CAAC;IACF,IAAIK,eAAe,GAAGJ,QAAQ,CAACK,IAAI,CAACC,OAAO;IACzC,IAAIN,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,UAAU,IAAI,QAAQ,EAAE;MACjDH,eAAe,GAAG,CAAC,GAAGJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACE,SAAS,EAAE,GAAGR,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IACpG;IACE,OAAOL,eAAe;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEL,aAAc,UAASiB,OAAQ,EAAC,EAAE;MACpEX,MAAM,EAAE;QACNC,OAAO,EAAER;MACX;IACF,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEL,aAAc,iBAAgB,EAAE;MAClEM,MAAM,EAAE;QACNC,OAAO,EAAER;MACX;IACF,CAAC,CAAC;IACF,OAAOK,QAAQ,CAACK,IAAI,CAACC,OAAO;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}