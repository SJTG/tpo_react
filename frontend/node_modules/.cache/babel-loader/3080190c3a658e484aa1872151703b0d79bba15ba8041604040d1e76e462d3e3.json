{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lauty\\\\OneDrive\\\\Documentos\\\\GitHub\\\\tpo_react\\\\frontend\\\\src\\\\contexts\\\\ListContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContext = /*#__PURE__*/createContext();\nexport function useLists() {\n  _s();\n  return useContext(ListContext);\n}\n_s(useLists, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ListProvider = ({\n  children\n}) => {\n  _s2();\n  const [lists, setLists] = useState({\n    Favoritas: [],\n    Vistas: [],\n    Porver: [] // Cambiado a 'Por ver' para consistencia\n  });\n  const addToList = (movie, listType) => {\n    if (!lists[listType]) {\n      console.error(`List type '${listType}' does not exist.`);\n      return;\n    }\n    const newList = [...lists[listType], {\n      id: movie.id,\n      title: movie.title\n    }];\n    setLists(prevLists => ({\n      ...prevLists,\n      [listType]: newList\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(ListContext.Provider, {\n    value: {\n      lists,\n      setLists,\n      addToList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s2(ListProvider, \"vBBB8SRnSX/JkCpRn2LYEUnC3Oo=\");\n_c = ListProvider;\nvar _c;\n$RefreshReg$(_c, \"ListProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ListContext","useLists","_s","ListProvider","children","_s2","lists","setLists","Favoritas","Vistas","Porver","addToList","movie","listType","console","error","newList","id","title","prevLists","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lauty/OneDrive/Documentos/GitHub/tpo_react/frontend/src/contexts/ListContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst ListContext = createContext();\r\n\r\nexport function useLists() {\r\n  return useContext(ListContext);\r\n}\r\n\r\nexport const ListProvider = ({ children }) => {\r\n  const [lists, setLists] = useState({\r\n    Favoritas: [],\r\n    Vistas: [],\r\n    Porver: []  // Cambiado a 'Por ver' para consistencia\r\n  });\r\n\r\n  const addToList = (movie, listType) => {\r\n    if (!lists[listType]) {\r\n      console.error(`List type '${listType}' does not exist.`);\r\n      return;\r\n    }\r\n    const newList = [...lists[listType], { id: movie.id, title: movie.title }];\r\n    setLists(prevLists => ({ ...prevLists, [listType]: newList }));\r\n  };\r\n\r\n  return (\r\n    <ListContext.Provider value={{ lists, setLists, addToList }}>\r\n      {children}\r\n    </ListContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASM,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,OAAOL,UAAU,CAACG,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,QAAQ;AAIxB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IACjCY,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE,CAAE;EACd,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI,CAACP,KAAK,CAACO,QAAQ,CAAC,EAAE;MACpBC,OAAO,CAACC,KAAK,CAAE,cAAaF,QAAS,mBAAkB,CAAC;MACxD;IACF;IACA,MAAMG,OAAO,GAAG,CAAC,GAAGV,KAAK,CAACO,QAAQ,CAAC,EAAE;MAAEI,EAAE,EAAEL,KAAK,CAACK,EAAE;MAAEC,KAAK,EAAEN,KAAK,CAACM;IAAM,CAAC,CAAC;IAC1EX,QAAQ,CAACY,SAAS,KAAK;MAAE,GAAGA,SAAS;MAAE,CAACN,QAAQ,GAAGG;IAAQ,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,KAAK;MAAEC,QAAQ;MAAEI;IAAU,CAAE;IAAAP,QAAA,EACzDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,GAAA,CArBWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}