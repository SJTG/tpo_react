{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lauty\\\\OneDrive\\\\Documentos\\\\GitHub\\\\tpo_react\\\\frontend\\\\src\\\\views\\\\MovieDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DetailsMovieDetail from '../components/MovieDetail/DetailsMovieDetail';\nimport { getMovieDetails } from '../services/tmdb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetailPage() {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DetailsMovieDetail, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetailPage, \"sqjLqI6A1HBffP7G0nQ7aGjq+xM=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetailPage;\nexport default MovieDetailPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","DetailsMovieDetail","getMovieDetails","jsxDEV","_jsxDEV","MovieDetailPage","_s","movieId","movie","setMovie","fetchMovieDetails","movieData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lauty/OneDrive/Documentos/GitHub/tpo_react/frontend/src/views/MovieDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DetailsMovieDetail from '../components/MovieDetail/DetailsMovieDetail'; \r\nimport { getMovieDetails } from '../services/tmdb'; \r\n\r\nfunction MovieDetailPage() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const movieData = await getMovieDetails(movieId);\r\n        setMovie(movieData);\r\n      } catch (error) {\r\n        console.error('Error fetching movie details:', error);\r\n      }\r\n    };\r\n    fetchMovieDetails();\r\n  }, [movieId]);\r\n\r\n  if (!movie) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DetailsMovieDetail movie={movie} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,kBAAkB,MAAM,8CAA8C;AAC7E,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMT,eAAe,CAACK,OAAO,CAAC;QAChDE,QAAQ,CAACE,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDF,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,IAAI,CAACC,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEd,OAAA;IAAAU,QAAA,eACEV,OAAA,CAACH,kBAAkB;MAACO,KAAK,EAAEA;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACZ,EAAA,CAzBQD,eAAe;EAAA,QACFL,SAAS;AAAA;AAAAmB,EAAA,GADtBd,eAAe;AA2BxB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}